name: Build and Push Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout frontend repository
      uses: actions/checkout@v4
      with:
        path: frontend

    - name: Checkout backend repository
      uses: actions/checkout@v4
      with:
        repository: fish2018/pansou
        path: backend
        # 如果后端仓库是私有的，需要配置token
        # token: ${{ secrets.BACKEND_REPO_TOKEN }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache-dependency-path: backend/go.sum

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Build frontend
      working-directory: frontend
      run: |
        npm run build
        ls -la dist/

    - name: Install backend dependencies
      working-directory: backend
      run: go mod download

    - name: Build backend
      working-directory: backend
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o pansou .
        chmod +x pansou

    - name: Prepare build context
      run: |
        mkdir -p build-context
        # 复制前端构建产物
        cp -r frontend/dist build-context/frontend-dist
        # 复制后端二进制文件
        cp backend/pansou build-context/
        # 复制Docker相关文件
        cp frontend/Dockerfile build-context/
        cp frontend/start.sh build-context/
        chmod +x build-context/start.sh

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix=sha-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: build-context
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}